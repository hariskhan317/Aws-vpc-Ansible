---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Importing Varibles
      include_vars: vars/Vpc-setup

    - name: create a vpc
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: true
        dns_hostnames: true
        tags:
          module: ec2_vpc_net
          this: works
        tenancy: default
        state: "{{state}}"
      register: vpcout

    - debug:
        var: vpcout

      #Public subnet
    - name: Create subnet for PubSub1Cidr
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{PubSub1Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        map_public: yes
        resource_tags:
          Name: PubSub-1
      register: PubSub1_out

    - name: Create subnet for PubSub2Cidr
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{PubSub2Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        map_public: yes
        resource_tags:
          Name: PubSub-2
      register: PubSub2_out

    - name: Create subnet for PubSub3Cidr
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{PubSub3Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        map_public: yes
        resource_tags:
          Name: PubSub-3
      register: PubSub3_out

    #Private subnet
    - name: Create subnet for PrivSub1Cidr
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{PrivSub4Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        map_public: yes
        resource_tags:
          Name: Privsub-1
      register: PrivSub1_out

    - name: Create subnet for PrivSub2Cidr
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{PrivSub5Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        map_public: yes
        resource_tags:
          Name: PrivSub-2
      register: PrivSub2_out

    - name: Create subnet for PrivSub3Cidr
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{PrivSub6Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        map_public: yes
        resource_tags:
          Name: PrivSub-3
      register: PrivSub3_out
#  Internet gateway
    - name: Attach Internet Gateway to VPC
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        state: "{{state}}"
      register: igw_out
#  routes table
    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        subnets:
          - "{{ PubSub1_out.subnet.id }}"
          - "{{ PubSub2_out.subnet.id }}"
          - "{{ PubSub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRt_out
#     Nat Gate way
    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{ PubSub1_out.subnet.id }}"
        wait: true
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: nat_gateway_out
#     Route for nat
    - name: Set up Private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        subnets:
          - "{{ PrivSub1_out.subnet.id }}"
          - "{{ PrivSub2_out.subnet.id }}"
          - "{{ PrivSub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gateway_out.gateway_id }}"
      register: privRt_out